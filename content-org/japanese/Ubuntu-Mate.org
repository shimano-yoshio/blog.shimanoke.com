#+TITLE: Ubuntu Mate Tips
#+LANGUAGE: ja
#+AUTHOR: 島野 善雄
#+EMAIL: shimano.yoshio@gmail.com
# 出版した日付
#+date: <2023-08-31 Thu>
# 更新日を自動的につける
#+hugo_auto_set_lastmod: t
# 見出しをレベル 6 まで出す
#+OPTIONS: H:6 num:nil
#+OPTIONS: toc:1
#+STARTUP: indent
#+hugo_type: post
# 出力するディレクトリ
#+hugo_base_dir: ../..
# 出版するファイル名
#+hugo_section: japanese/docs
#+OPTIONS: creator:nil author:t
#+LANGUAGE: ja
# Hugo のタグ
#+filetags: Ubuntu "Ubuntu MATE"
# Hugo のカテゴリー
#+hugo_categories: Ubuntu
# #+hugo_custom_front_matter: :thumbnail images/org-to-hugo.svg


* Ubuntu のコツ                                                :RefileTarget:
** DONE ripgrep （Rust で作られた grep ）を使う
CLOSED: [2023-09-05 Tue 15:32]
:PROPERTIES:
:EXPORT_DATE: <2023-09-04 Mon>
:EXPORT_HUGO_SECTION: japanese/posts
:EXPORT_FILE_NAME: use-ripgrep
:EXPORT_OPTIONS: toc:t num:t
:END:
:LOGBOOK:
- State "DONE"       from "TODO"       [2023-09-05 Tue 15:32]
CLOCK: [2023-09-05 Tue 15:15]--[2023-09-05 Tue 15:32] =>  0:17
CLOCK: [2023-09-05 Tue 15:10]--[2023-09-05 Tue 15:13] =>  0:03
CLOCK: [2021-11-23 Tue 10:01]--[2021-11-23 Tue 10:07] =>  0:06
CLOCK: [2021-11-23 Tue 10:00]--[2021-11-23 Tue 10:01] =>  0:01
:END:

ripgrep は Rust で作られた grep です。
次のような特徴があります。

- マルチスレッドで動くので速い
- grep よりも短かくコマンドを書くことができる

詳しくは以下をごらんください。

- [[https://github.com/BurntSushi/ripgrep][BurntSushi/ripgrep: ripgrep recursively searches directories for a regex pattern while respecting your gitignore]]


*** Ubuntu MATE 23.04 への ripgrep インストール

Ubuntu MATE 23.04 に ripgrep をインストールするには
次のようにします:

#+caption: Ubuntu への ripgrep のインストール
#+begin_src sh :eval no
sudo apt-get install ripgrep
#+end_src

*** ripgrep の使いかた

ripgrep を使ってカレントディレクトリを "hoge" に対して再起動に検索するには
次のようにします。

#+caption: ripgrep を使ってカレントディレクトリを "hoge" に対して再起動に検索
#+begin_src sh :eval no
rg hoge
#+end_src

"rg" は ripgrep の実行ファイル名です。

これは次のようにして grep を使った場合と同様です:

#+caption: grep を使ってカレントディレクトリを "hoge" に対して再起動に検索
#+begin_src sh :eval no
grep -r hoge *
#+end_src

ただし、 ripgrep のほうがずっと速く、
コマンドが短か、
出力が読みやすいです。

もちろん日本語も検索できます

#+caption: ripgrep で日本語を検索
#+begin_src sh :eval no
rg カレントディレクトリ
#+end_src

このように出力されます:

#+begin_example
Ubuntu-Mate.org
63:ripgrep を使ってカレントディレクトリを "hoge" に対して再起動に検索するには
66:#+caption: ripgrep を使ってカレントディレクトリを "hoge" に対して再起動に検索
75:#+caption: ripgrep を使ってカレントディレクトリを "hoge" に対して再起動に検
#+end_example


*** 結論

grep のかわりに ripgrep を使いましょう。




** TODO ラウンチャ Albert を Ubuntu で使う
DEADLINE: <2023-09-12 Tue>
:PROPERTIES:
:EXPORT_DATE: <2023-09-10 Sun>
:EXPORT_HUGO_SECTION: japanese/posts
:EXPORT_FILE_NAME: use-alert
:EXPORT_OPTIONS: toc:t num:t
:END:
:LOGBOOK:
CLOCK: [2021-12-02 Thu 08:13]--[2021-12-02 Thu 08:37] =>  0:24
CLOCK: [2021-12-02 Thu 08:12]--[2021-12-02 Thu 08:13] =>  0:01
:END:

- [[https://albertlauncher.github.io/installing/][Albert - Installing]]


*** インストールした環境

- OS : Ubuntu MATE 23.04 on VirtualBox on Windowss 11


*** Albert のインストール

次のようにして Albert をインストールします。
詳しくは以下をごらんください。

- [[https://software.opensuse.org/download.html?project=home%3Amanuelschneid3r&package=albert-master][パッケージのインストール: home:manuelschneid3r / albert-master]]

#+caption: Albert のインストール
#+begin_src sh :eval no
echo 'deb http://download.opensuse.org/repositories/home:/manuelschneid3r/xUbuntu_23.04/ /' | sudo tee /etc/apt/sources.list.d/home:manuelschneid3r.list
curl -fsSL https://download.opensuse.org/repositories/home:manuelschneid3r/xUbuntu_23.04/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/home_manuelschneid3r.gpg > /dev/null
sudo apt update
sudo apt install albert-master
#+end_src


*** Albert を使う



** DONE スクリーン上にキーストロークを表示する (Ubuntu 23.04)
CLOSED: [2023-09-03 Sun 12:41]
:PROPERTIES:
:EXPORT_DATE: <2023-09-02 Sat>
:EXPORT_HUGO_SECTION: japanese/posts
:EXPORT_FILE_NAME: show-key-on-screen-mate
:EXPORT_OPTIONS: toc:t num:t
:END:
:LOGBOOK:
- State "DONE"       from "TODO"       [2023-09-03 Sun 12:41]
:END:

ときどき、プレゼンテーションの間のように、
キーストロークを画面に表示したいことがあります。

このために、私は [[https://www.thregr.org/wavexx/software/screenkey/][screenkey]] を使っていあます。

- [[https://www.thregr.org/wavexx/software/screenkey/][Screencast your keys.]]

この記事では、
Screenkey のインストール/セットアップ方法を示します。

*** 環境

- OS: Ubuntu Mate 23.04 on VirtualBox] on Windows 11.


*** screenkey のインストール

Screenky を Ubuntu にインストールするには、
これをターミナルの中でタイプします:

#+caption: Install Screenkye
#+begin_src sh :eval no
sudo apt -y install screenkey
#+end_src

*** Screnkey をはじめる
次に
screenkey をターミナルからはじめます:

#+caption: Start Screenkey
#+begin_src sh :eval no
screenkey
#+end_src

その後で screenkey アイコンが
メインメニュー上に表示されます:

#+attr_html: :alt Screenkye Icon on Main Menu
#+ATTR_HTML: :width 50% :style float:center;border:2px solid black;
#+caption: Screenkye のアイコン
[[file:~/Documents/blog.shimanoke.com/content-org/japanese/images/screenshot-menu.png]]

"Preferences" を選択して、
自分の好みに設定してください。

#+attr_html: :alt Screenkey の設定
#+ATTR_HTML: :width 50% :style border:2px solid black;
#+caption: Screenkey の設定
[[file:~/Documents/blog.shimanoke.com/content-org/japanese/images/screenky-prefs.png]]


... そうすると、キーストロークがスクリーン上に
表示されることがわかります。

#+attr_html: :al Screenkey の動いている様子
#+ATTR_HTML: :width 50% :style border:2px solid black;
#+caption: Screenkey の動いている様子
[[file:~/Documents/blog.shimanoke.com/content-org/japanese/images/screenkye.gif]]







** DONE peco を使って zsh でコマンド履歴を便利にする
:PROPERTIES:
:EXPORT_DATE: <2023-08-31 Thu>
:EXPORT_HUGO_SECTION: japanese/posts
:EXPORT_FILE_NAME: use-peco-in-zsh
:EXPORT_OPTIONS: toc:t num:t
:END:
:LOGBOOK:
- State "DONE"       from              [2023-09-03 Sun 09:54]
:END:

私はシェルとして Zsh を使っています。
Zsh はコマンド補完がありますが、peco を使うと、
コマンドの履歴を便利に選択することができます。

- [[https://github.com/peco/peco][peco/peco: Simplistic interactive filtering tool]]

下の図では =apt= とタイプした後に =Ctl-r" をタイプしています。
コマンド補完の候補が出てくるのがわかります。

ここでコマンドを選択するために Emacs のキーバインディングを
使うことができます。


#+caption: peco を起動した情愛
[[file:images/peco-samoke.png]]

*** この文書の設定できること

- コマンド履歴の検索 (Ctl+r)
- cd の履歴の検索 (Ctl+f)

*** 参考文献


以下のサイトを参考にさせていただきました。

- [[https://github.com/peco/peco][peco/peco: Simplistic interactive filtering tool]] : peco 本家
- [[https://www.wakuwakubank.com/posts/862-mac-zsh-peco/][Mac | zshとpecoでコマンド入力作業を快適に - わくわくBank]] : zsh から
  peco を使う方法が詳しくのっています。
*** 確認環境
確認した環境です。
私は Ubuntu MATE を使っていますが、Windows でも動くようです。

- Host OS : Windows11 Pro
- Guest OS : Ubuntu Mate 23.04 on VirtualBox

*** peco のインストール

peco をインストールするには次のようにします:

#+caption: peco の Ubuntu  へのインストール
#+begin_src sh
sudo apt -y install peco
#+end_src

*** Zsh で peco を使うための設定

=~/.zshrc= に以下を追加します。

#+caption: Zsh で peco を使うための設定
#+begin_src sh
# ---------------------------------------
# peco
# https://www.instagram.com/pecotecooo/?hl=en
# ---------------------------------------

# A function for command history (Ctl-r)
function peco-select-history() {
    local tac
    if which tac > /dev/null; then
        tac="tac"
    else
        tac="tail -r"
    fi
    BUFFER=$(\history -n 1 | \
        eval $tac | \
        peco --query "$LBUFFER")
    CURSOR=$#BUFFER
    zle clear-screen1
}
zle -N peco-select-history
bindkey '^r' peco-select-history

# Setup cdr
if [[ -n $(echo ${^fpath}/chpwd_recent_dirs(N)) && -n $(echo ${^fpath}/cdr(N)) ]]; then
    autoload -Uz chpwd_recent_dirs cdr add-zsh-hook
    add-zsh-hook chpwd chpwd_recent_dirs
    zstyle ':completion:*' recent-dirs-insert both
    zstyle ':chpwd:*' recent-dirs-default true
    zstyle ':chpwd:*' recent-dirs-max 1000
fi

# cd history (Ctrl+f)
function peco-cdr () {
    local selected_dir="$(cdr -l | sed 's/^[0-9]\+ \+//' | peco --prompt="cdr >" --query "$LBUFFER")"
    if [ -n "$selected_dir" ]; then
        BUFFER="cd ${selected_dir}"
        zle accept-line
    fi
}
zle -N peco-cdr
bindkey '^f' peco-cdr
# ---------------------------------------
#+end_src


*** 使用方法

- コマンド履歴の検索 (Ctl+r)
- cd の履歴の検索 (Ctl+f)

** TODO peco の色を変更する

- [[https://rochefort.hatenablog.com/entry/2015/12/10/210000][pecoのkeymapと色を変更 - rochefort's blog]]


** TODO Ubuntu でスクリーンキャストを録画し、GIF に保存する
DEADLINE: <2023-09-12 Tue>


peek を使っています

- [[https://github.com/phw/peek][phw/peek: Simple animated GIF screen recorder with an easy to use interface]]


*** Install

#+begin_src sh :eval no
sudo add-apt-repository ppa:peek-developers/stable
sudo apt update
sudo apt install peek
#+end_src


バージョン確認
#+begin_src sh
/usr/bin/peek -v
#+end_src

#+begin_example
Peek 1.5.1
#+end_example


** TODO ターミナルンの見栄えをよくするために PowerLine を使う

** TODO git の diff 出力を見やすくするためいのん delta を使う


** TODO bat を使ってファイルの中身を見る （less の代用）


** TODO Zoom In/Out in Ubuntu MATE 23.04
DEADLINE: <2023-09-03 Sun>
:LOGBOOK:
CLOCK: [2023-03-24 Fri 15:04]--[2023-03-24 Fri 15:05] =>  0:01
:END:

*** Purpose

It is useful to zoom in/out your screen.

*** Environment

#+begin_src sh
cat /etc/os-release
#+end_src


*** Reference

- https://learnubuntumate.weebly.com/enable-magnification.html


*** Install Packages

#+begin_src sh :eval no
sudo apt -y install compiz compizconfig-settings-manager compiz-plugins
#+end_src

*** Setup

**** Change the window manaer to Commpiz

1. Open "MATE Tweak"
2. Selct "WindowsW
3. In "Window Manager"
   - Select "Commpiz"

#+caption: Select "Commpiz" in Ubuntu MATE
[[file:images/mate-tweak-select-winmngr.png]]

**** Zoom Settin

- Zoom In : <super>semicolon
- Zoom Out : <super>equal

Open the control center:

mate-control-center

When the Control Center dialog box appears
,
scroll down
to the
"Look and Feel"
group
and click on the CompizConfig Settings Manager.


[[file:images/select-compiz-from-ctl-ctr.png]]

Click the Composite icon under the General group.


Uncheck
the box
to the right
of
Unredirect Fullscreen Windows
and then
click
the Back button
in the lower left corner
of the dialog box
.
This feature
causes
screen
flickering
on a lot
of machines
.
However
if your machine
can support it
,
it can dramatically improve graphical performance.


Make sure
you
have checks
next
to Magnifier
and Enhanced Zoom Desktop
in the Accessibilty category
. 

#+caption: Zoom In/Out Settings
[[file:images/mate-zoom-settings.png]]


*** Conclusion

Ubuntu 上でスクリーンの拡大/縮小ができるようになります。


** TODO Ubuntu でスクリーンキャストを録画し、GIF に保存する

- [[https://github.com/phw/peek][phw/peek: Simple animated GIF screen recorder with an easy to use interface]]


*** Install


#+begin_src sh :eval no
sudo add-apt-repository ppa:peek-developers/stable
sudo apt update
sudo apt install peek
#+end_src

#+begin_src sh
/usr/bin/peek -v
#+end_src

#+begin_example
Peek 1.5.1
#+end_example


** TODO Use UIM on Ubuntu Mate 23.04
DEADLINE: <2023-09-02 Sat>

: sudo apt install uim uim-data uim-mozc uim-plugins uim-xim

=~/.zshrc= 

#+begin_example
export XMODIFIERS=@im=uim
export GTK_IM_MODULE=uim
export QT_IM_MODULE=uim
#+end_example


- [[https://whoraibo.hatenablog.com/entry/2021/02/23/222612][Ubuntu 18.04で日本語, 韓国語混在入力: uim-mozc, byeoru - 風来坊@真幸福知]]



** TODO Ubuntu での情報取得あれこれ


*** インストールされているパッケージ

#+begin_src sh :eval no
apt list
#+end_src

*** カーネル情報

#+begin_src sh :eval no
uname -a
#+end_src

*** OS のリリース情報

#+begin_src sh
  cat /etc/os-release
#+end_src



** TODO Ubuntu Mate t でメニューなどのフォンオを微調整する方法

「コントロールセンター」→ 「ルック & フィール」→ 「外観」

で、「フォント」タブを選択し、「詳細」を選択

DPI 数の数値をあげます。

** TODO How to take a screenshot on Ubunbu MATE 23.040a
DEADLINE: <2023-09-06 Wed>



